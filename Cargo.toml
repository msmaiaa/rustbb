[package]
name = "rustbb"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
leptos = { version = "0.2.5", default-features = false, features = [
  "serde",
] }
leptos_axum = { version = "0.2.5", optional = true }
leptos_meta = { version = "0.2.5", default-features = false }
leptos_router = { version = "0.2.5", default-features = false }
gloo-net = { version = "0.2", features = ["http"] }
gloo-storage = "0.2"
log = "0.4"
chrono = {version = "0.4.23", features = ["serde"]}
cfg-if = "1.0"

# dependecies for client (enable when csr or hydrate set)
wasm-bindgen = { version = "0.2", optional = true }
console_log = { version = "0.2", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }

# dependecies for server (enable when ssr set)
axum = { version = "0.6.1", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.3.4", features = ["fs"], optional = true }
futures = { version = "0.3", optional = true }
simple_logger = { version = "4.0", optional = true }

dotenv = { version = "0.15.0", optional = true }
tracing = { version = "0.1.37", optional = true}
tracing-subscriber = { version = "0.3.16", optional = true}
sqlx = { version = "0.6", features = [ "runtime-tokio-rustls", "postgres", "chrono", "json" ], optional = true }
tokio = { version = "1.22.0", features = ["full"], optional = true }
serde = "1.0.152"
serde_json = "1.0.93"
rust-argon2 = { version = "1.0.0", optional = true}
jsonwebtoken = { version = "8.3.0", optional = true}
wildmatch = "2.1.1"
strum_macros = "0.24.3"
strum = "0.24.1"
http = "0.2.9"
cookie = "0.17.0"
thiserror = "1.0.40"
lazy_static = "1.4.0"

[features]
default = ["hydrate"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate", "dep:wasm-bindgen", "dep:console_log", "dep:console_error_panic_hook"]
ssr = ["leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "dep:axum", "dep:tower", "dep:tower-http", "dep:futures", "dep:simple_logger", "dep:dotenv", "dep:tracing", "dep:tracing-subscriber", "dep:sqlx", "dep:rust-argon2", "dep:jsonwebtoken", "dep:leptos_axum", "dep:tokio"]

[package.metadata.cargo-all-features]
denylist = [
  "console_error_panic_hook",
  "console_log",
  "futures",
  "simple_logger",
  "wasm-bindgen",
  "rbatis",
  "rbs",
  "rbdc-pg",
]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'

[package.metadata.leptos]
output-name = "rustbb"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/output.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
